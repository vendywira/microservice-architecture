version: '3.7'

services:
  vault:
    image: vault:1.9.3
    container_name: vault
    restart: always
    volumes:
      - ./vault:/vault
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
    command: vault server -config=/vault/config/vault-config.json
    cap_add:
      - IPC_LOCK
    depends_on:
      - consul
    ports:
      - 8200:8200
  consul:
    image: consul:1.9.3
    container_name: consul
    restart: always
    volumes:
      - ./consul/config/consul-config.json:/consul/config/config.json
      - ./consul/data:/consul/data
    ports:
      - '8500:8500'
      - '8600:8600/tcp'
      - '8600:8600/udp'
    command: 'agent -server -bind 0.0.0.0 -client 0.0.0.0 -bootstrap-expect 1 -config-file=/consul/config/config.json'
  mongodb:
    image: bitnami/mongodb:4.4
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_ROOT_DATABASE: root_db
      ALLOW_EMPTY_PASSWORD: yes
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/data:/bitnami/mongodb/data
      - ./mongo/config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  mysql-order:
    image: mysql:8
    container_name: mysql-order
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "order_service"
      MYSQL_USER: "order_service"
      MYSQL_PASSWORD: "p@ssw0rd123"
      MYSQL_ROOT_PASSWORD: "p@ssw0rd123"
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ./mysql/data:/var/lib/mysql
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/data:/var/lib/kafka/data
    ports:
      - "9092:9092"